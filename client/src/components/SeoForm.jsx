import React, { useState, useRef } from 'react'
import { createPortal } from 'react-dom'
import ScoreBadge from './ScoreBadge.jsx'
import ResultCard from './ResultCard.jsx'

const API_BASE = import.meta.env.VITE_API_BASE || 'http://localhost:5050';

export default function SeoForm({ user, token, requireAuth }) {
  const [url, setUrl] = useState('')
  const [loading, setLoading] = useState(false)
  const [data, setData] = useState(null)
  const [error, setError] = useState('')
  const [urlValid, setUrlValid] = useState(true)
  const [showAuth, setShowAuth] = useState(false)
  
  // Debug logging and user validation
  const isProUser = user && (typeof user === 'object') && (user.id || user.username || user.email) && user.tier !== 'free'
  console.log('SeoForm user status:', { 
    user, 
    userType: typeof user, 
    userTier: user?.tier,
    isProUser,
    hasUserData: !!(user && Object.keys(user).length > 0)
  })

  // URL validation function
  const validateUrl = (input) => {
    if (!input.trim()) return true // Allow empty input
    try {
      const url = new URL(input.startsWith('http') ? input : `https://${input}`)
      return url.protocol === 'http:' || url.protocol === 'https:'
    } catch {
      return false
    }
  }

  // Handle URL input changes
  const handleUrlChange = (e) => {
    const value = e.target.value
    setUrl(value)
    setUrlValid(validateUrl(value))
    // Don't clear analysis data when URL is cleared - let results persist
  }

  const onSubmit = async (e) => {
    e.preventDefault()
    
    if (!requireAuth()) {
      return
    }
    
    // Normalize URL - add https:// if no protocol is present
    const normalizedUrl = url.startsWith('http') ? url : `https://${url}`
    
    setLoading(true); setError(''); setData(null)
    try {
      const headers = {
        'Authorization': `Bearer ${token}`
      }
      const res = await fetch(`${API_BASE}/api/analyze?url=` + encodeURIComponent(normalizedUrl), { headers })
      const json = await res.json()
      if (!res.ok) {
        if (res.status === 401) {
          setError('Please login to analyze websites')
          return
        }
        if (res.status === 429) {
          setError(json.message || 'Daily limit reached. Upgrade to Pro for unlimited access.')
          return
        }
        throw new Error(json.error || 'Failed')
      }
      // Store the analyzed URL with the data for display purposes
      console.log('API Response data:', json)
      console.log('Score in response:', json.score)
      setData({ ...json, analyzedUrl: normalizedUrl })
    } catch (err) {
      setError(err.message || 'Request failed')
    } finally {
      setLoading(false)
    }
  }

  const downloadReport = () => {
    if (!data) return

    const hostname = new URL(data.analyzedUrl || data.url).hostname
    const reportDate = new Date().toLocaleDateString('en-US', { 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    })

    // Generate comprehensive report content
    const reportContent = `SEO Analysis Report
Generated by Website Scanner
${reportDate}

WEBSITE ANALYSIS FOR: ${hostname}
Overall SEO Score: ${data.score}/100
Analysis Date: ${reportDate}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📊 PERFORMANCE OVERVIEW

• HTTP Status: ${data.status}
• Response Time: ${data.ttfbMs}ms
• HTTPS Enabled: ${data.metrics.technical?.https ? 'Yes' : 'No'}
• Total Word Count: ${data.wordCount}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📄 PAGE BASICS

• Title: ${data.metrics.title || 'Missing'}
• Title Length: ${data.metrics.title ? `${data.metrics.title.length} characters` : 'N/A'}
• Meta Description: ${data.metrics.metaDescription ? 'Present' : 'Missing'}
• Meta Description Length: ${data.metrics.metaDescription ? `${data.metrics.metaDescription.length} characters` : 'N/A'}
• Viewport Meta Tag: ${data.metrics.viewport ? 'Present' : 'Missing'}
• Language Attribute: ${data.metrics.lang || 'Missing'}
• Canonical URL: ${data.metrics.canonical ? 'Present' : 'Missing'}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🏗️ CONTENT STRUCTURE

• H1 Tags: ${data.metrics.h1Count} found
• Header Hierarchy: ${data.metrics.headerHierarchy?.isGood ? 'Good' : data.metrics.headerHierarchy?.issue || 'Issues detected'}
• Total Images: ${data.metrics.imgCount}
• Images Missing Alt Text: ${data.metrics.imgsMissingAlt}
• Alt Text Coverage: ${data.metrics.imgCount > 0 ? Math.round(((data.metrics.imgCount - data.metrics.imgsMissingAlt) / data.metrics.imgCount) * 100) + '%' : 'N/A'}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔧 TECHNICAL SEO

• Structured Data (JSON-LD): ${data.metrics.jsonLdCount} schemas found
• Robots Meta Tag: ${data.metrics.robotsMeta || 'Not set'}
• Broken Links: ${data.metrics.technical?.brokenLinks?.brokenCount || 0} detected

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📱 SOCIAL MEDIA & SHARING

• Open Graph Title: ${data.metrics.og?.title ? 'Present' : 'Missing'}
• Open Graph Description: ${data.metrics.og?.description ? 'Present' : 'Missing'}
• Twitter Card: ${data.metrics.twitterCard || 'Missing'}
• Social Media Links: ${data.metrics.socialLinks?.count || 0} found
• Social Platforms: ${data.metrics.socialLinks?.platforms?.join(', ') || 'None detected'}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔗 LINK ANALYSIS

• Total Links: ${data.metrics.linkTotals?.total || 0}
• Internal Links: ${data.metrics.linkTotals?.internal || 0}
• External Links: ${data.metrics.linkTotals?.external || 0}
• Internal/External Ratio: ${data.metrics.linkTotals?.external > 0 ? (data.metrics.linkTotals.internal / data.metrics.linkTotals.external).toFixed(2) + ':1' : 'N/A'}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎯 TOP PRIORITY FIXES

${!data.metrics.title || data.metrics.title.length < 30 ? '• HIGH PRIORITY: Add or improve title tag (30-60 characters recommended)\n' : ''}${data.metrics.imgsMissingAlt > 0 ? `• MEDIUM PRIORITY: Add alt text to ${data.metrics.imgsMissingAlt} image${data.metrics.imgsMissingAlt > 1 ? 's' : ''}\n` : ''}${!data.metrics.headerHierarchy?.isGood ? `• HIGH PRIORITY: Fix header hierarchy - ${data.metrics.headerHierarchy?.issue || 'Issues detected'}\n` : ''}${data.ttfbMs > 800 ? `• HIGH PRIORITY: Improve page load speed (current: ${data.ttfbMs}ms)\n` : ''}${!data.metrics.technical?.https ? '• HIGH PRIORITY: Enable HTTPS for better security and SEO\n' : ''}${data.metrics.socialLinks?.count < 2 ? '• MEDIUM PRIORITY: Add social media links to improve engagement\n' : ''}${!data.metrics.metaDescription ? '• HIGH PRIORITY: Add meta description (50-160 characters)\n' : ''}${!data.metrics.viewport ? '• HIGH PRIORITY: Add mobile viewport meta tag\n' : ''}

${user ? `━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔬 ADVANCED ANALYSIS (PRO FEATURES)

• Meta Information Score: ${data.metrics.metaInformation?.score || 0}/100
• Schema Markup Score: ${data.metrics.schemaMarkup?.score || 0}/100
• Server Configuration Score: ${data.metrics.serverConfiguration?.score || 0}/100
• Accessibility Score: ${data.metrics.accessibility?.score || 0}/100
• Content Quality Score: ${data.metrics.contentQuality?.structureScore || 0}/100
• Mobile Friendly Score: ${data.metrics.mobileFriendly?.score || 0}/100
• Security Analysis Score: ${data.metrics.security?.score || 0}/100

ADVANCED RECOMMENDATIONS:
${data.metrics.metaInformation?.score < 70 ? '• Improve meta tag completeness and Open Graph implementation\n' : ''}${data.metrics.schemaMarkup?.count === 0 ? '• Add structured data markup for better search visibility\n' : ''}${data.metrics.serverConfiguration?.score < 60 ? '• Enhance server security headers and configuration\n' : ''}${data.metrics.accessibility?.score < 80 ? '• Address accessibility issues for better user experience\n' : ''}${data.metrics.security?.score < 70 ? '• Strengthen website security features\n' : ''}` : `

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📈 UNLOCK ADVANCED FEATURES

This analysis shows basic SEO metrics. Sign up for a free account to access:
• Advanced performance metrics
• Detailed accessibility analysis 
• Schema markup insights
• Security vulnerability assessment
• Mobile optimization recommendations
• Comprehensive content quality analysis

Visit your Website Scanner dashboard to unlock the full potential!`}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Generated by Website Scanner - Your complete SEO analysis solution
Analysis completed on ${reportDate}
`

    // Create and download the file
    const blob = new Blob([reportContent], { type: 'text/plain' })
    const url = window.URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.style.display = 'none'
    a.href = url
    a.download = `SEO-Report-${hostname}-${new Date().toISOString().split('T')[0]}.txt`
    document.body.appendChild(a)
    a.click()
    window.URL.revokeObjectURL(url)
    document.body.removeChild(a)
  }

  return (
    <div style={{
      width: '100%',
      maxWidth: '1200px',
      margin: '0 auto',
      padding: '60px 20px',
      background: 'transparent'
    }}>
      {/* Header Section */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: window.innerWidth > 1024 ? '1fr auto' : '1fr',
        gap: '60px',
        alignItems: 'start',
        padding: '48px',
        background: 'linear-gradient(135deg, rgba(139, 92, 246, 0.08) 0%, rgba(99, 102, 241, 0.04) 100%)',
        border: '1px solid rgba(139, 92, 246, 0.15)',
        borderRadius: '24px',
        backdropFilter: 'blur(20px)',
        marginBottom: '48px',
        position: 'relative',
        overflow: 'hidden'
      }}>
        {/* Background Effect */}
        <div style={{
          position: 'absolute',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          background: `
            radial-gradient(circle at 20% 30%, rgba(139, 92, 246, 0.1) 0%, transparent 40%),
            radial-gradient(circle at 80% 70%, rgba(99, 102, 241, 0.08) 0%, transparent 40%)
          `,
          pointerEvents: 'none',
          zIndex: 0
        }}></div>
        
        {/* Content */}
        <div style={{ position: 'relative', zIndex: 1, display: 'flex', flexDirection: 'column', height: '100%' }}>
          <div style={{
            display: 'inline-flex',
            alignItems: 'center',
            gap: '8px',
            background: 'rgba(139, 92, 246, 0.1)',
            border: '1px solid rgba(139, 92, 246, 0.2)',
            borderRadius: '50px',
            padding: '8px 16px',
            fontSize: '14px',
            fontWeight: '600',
            color: '#8b5cf6',
            marginBottom: '24px',
            alignSelf: 'flex-start'
          }}>
            <div style={{
              width: '8px',
              height: '8px',
              background: '#8b5cf6',
              borderRadius: '50%',
              animation: 'pulse 2s ease-in-out infinite'
            }}></div>
            <span>SEO Analysis Tool</span>
          </div>
          
          <h1 style={{
            fontSize: '52px',
            fontWeight: '900',
            lineHeight: '1.1',
            color: 'var(--text)',
            margin: '0 0 20px',
            letterSpacing: '-0.02em'
          }}>
            Analyze Your Website's
            <div style={{
              display: 'block',
              background: 'linear-gradient(135deg, #8b5cf6 0%, #6366f1 50%, #8b5cf6 100%)',
              WebkitBackgroundClip: 'text',
              WebkitTextFillColor: 'transparent',
              backgroundClip: 'text',
              backgroundSize: '200% 200%'
            }}>
              SEO Performance
            </div>
          </h1>
          
          <p style={{
            fontSize: '18px',
            lineHeight: '1.6',
            color: 'var(--text-muted)',
            margin: '0 0 auto',
            maxWidth: '500px',
            marginBottom: '40px'
          }}>
            Get instant insights into your website's SEO health with our comprehensive analysis tool.
          </p>
          
          {/* Form Section moved inside header */}
          <div style={{
            maxWidth: '700px',
            width: '100%',
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center'
          }}>
            <form onSubmit={onSubmit} style={{
              display: 'flex',
              flexDirection: 'column',
              gap: '24px',
              width: '100%',
              alignItems: 'center'
            }}>
              <div style={{
                display: 'flex',
                gap: '16px',
                alignItems: 'stretch',
                flexDirection: window.innerWidth <= 768 ? 'column' : 'row',
                width: '100%',
                maxWidth: '650px'
              }}>
                {/* Input Wrapper */}
                <div style={{
                  flex: 1,
                  position: 'relative',
                  background: 'rgba(255, 255, 255, 0.03)',
                  border: `2px solid ${!urlValid && url ? '#ef4444' : 'rgba(139, 92, 246, 0.15)'}`,
                  borderRadius: '20px',
                  padding: 0,
                  display: 'flex',
                  alignItems: 'center',
                  transition: 'all 0.3s ease',
                  overflow: 'hidden',
                  minWidth: 0
                }}>
                  <div style={{
                    padding: '20px',
                    color: 'var(--text-muted)',
                    display: 'flex',
                    alignItems: 'center',
                    flexShrink: 0
                  }}>
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                      <circle cx="11" cy="11" r="8"/>
                      <path d="M21 21L16.65 16.65"/>
                    </svg>
                  </div>
                  
                  <input 
                    value={url} 
                    onChange={handleUrlChange} 
                    placeholder="Enter your website URL (e.g., example.com)" 
                    style={{
                      flex: 1,
                      border: 'none',
                      outline: 'none',
                      background: 'transparent',
                      padding: '20px 16px',
                      fontSize: '16px',
                      color: !urlValid && url ? '#ef4444' : 'var(--text)',
                      fontWeight: '500',
                      width: 0,
                      minWidth: 0,
                      maxWidth: '100%'
                    }}
                    type="text"
                    required
                  />
                  
                  {url && (
                    <div style={{
                      display: 'flex',
                      alignItems: 'center',
                      gap: '8px',
                      padding: '0 16px',
                      flexShrink: 0
                    }}>
                      {!urlValid && url && (
                        <div style={{ color: '#ef4444', display: 'flex', alignItems: 'center' }} title="Invalid URL">
                          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                            <circle cx="12" cy="12" r="10"/>
                            <line x1="15" y1="9" x2="9" y2="15"/>
                            <line x1="9" y1="9" x2="15" y2="15"/>
                          </svg>
                        </div>
                      )}
                      {urlValid && (
                        <div style={{ color: '#10b981', display: 'flex', alignItems: 'center' }} title="Valid URL">
                          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                            <polyline points="20,6 9,17 4,12"/>
                          </svg>
                        </div>
                      )}
                      <button 
                        type="button" 
                        onClick={() => {
                          setUrl('')
                          setUrlValid(true)
                          // Don't clear analysis data - let results persist
                        }}
                        style={{
                          background: 'none',
                          border: 'none',
                          color: 'var(--text-muted)',
                          cursor: 'pointer',
                          padding: '4px',
                          borderRadius: '6px',
                          transition: 'all 0.2s ease',
                          display: 'flex',
                          alignItems: 'center'
                        }}
                        title="Clear"
                      >
                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                          <line x1="18" y1="6" x2="6" y2="18"/>
                          <line x1="6" y1="6" x2="18" y2="18"/>
                        </svg>
                      </button>
                    </div>
                  )}
                </div>
                
                {/* Analyze Button */}
                <button 
                  type="submit" 
                  disabled={loading || !url.trim() || !urlValid} 
                  style={{
                    background: 'linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%)',
                    border: 'none',
                    borderRadius: '20px',
                    padding: '20px 32px',
                    color: 'white',
                    fontSize: '16px',
                    fontWeight: '700',
                    cursor: loading || !url.trim() || !urlValid ? 'not-allowed' : 'pointer',
                    transition: 'all 0.3s ease',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    whiteSpace: 'nowrap',
                    position: 'relative',
                    overflow: 'hidden',
                    minWidth: '160px',
                    justifyContent: 'center',
                    opacity: loading || !url.trim() || !urlValid ? 0.6 : 1,
                    width: window.innerWidth <= 768 ? '100%' : 'auto'
                  }}
                >
                  {loading ? (
                    <>
                      <div style={{
                        width: '16px',
                        height: '16px',
                        border: '2px solid rgba(255, 255, 255, 0.3)',
                        borderTop: '2px solid white',
                        borderRadius: '50%',
                        animation: 'spin 1s linear infinite'
                      }}></div>
                      <span>Analyzing...</span>
                    </>
                  ) : (
                    <>
                      <span>Analyze Now</span>
                      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                        <polyline points="9,18 15,12 9,6"/>
                      </svg>
                    </>
                  )}
                </button>
              </div>
            </form>
          </div>
        </div>
        
        {/* Stats Preview */}
        {window.innerWidth > 1024 && (
          <div style={{
            display: 'flex',
            flexDirection: 'column',
            gap: '20px',
            position: 'relative',
            zIndex: 1
          }}>
            {[
              { number: '95', label: 'Avg Score' },
              { number: '1.2s', label: 'Load Time' },
              { number: '12+', label: 'Checks' }
            ].map((stat, index) => (
              <div key={index} style={{
                textAlign: 'center',
                padding: '20px',
                background: 'rgba(255, 255, 255, 0.05)',
                border: '1px solid rgba(139, 92, 246, 0.15)',
                borderRadius: '16px',
                backdropFilter: 'blur(12px)',
                transition: 'all 0.3s ease'
              }}>
                <div style={{
                  fontSize: '32px',
                  fontWeight: '800',
                  background: 'linear-gradient(135deg, #8b5cf6 0%, #6366f1 100%)',
                  WebkitBackgroundClip: 'text',
                  WebkitTextFillColor: 'transparent',
                  backgroundClip: 'text',
                  marginBottom: '8px'
                }}>
                  {stat.number}
                </div>
                <div style={{
                  fontSize: '14px',
                  fontWeight: '600',
                  color: 'var(--text-muted)',
                  textTransform: 'uppercase',
                  letterSpacing: '0.05em'
                }}>
                  {stat.label}
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* Error Display */}
      {error && (
        <div style={{
          maxWidth: '800px',
          margin: '32px auto 0',
          background: 'rgba(239, 68, 68, 0.1)',
          border: '1px solid rgba(239, 68, 68, 0.2)',
          borderRadius: '16px',
          padding: '20px',
          backdropFilter: 'blur(12px)'
        }}>
          <div style={{
            display: 'flex',
            alignItems: 'center',
            gap: '16px'
          }}>
            <div style={{ color: '#ef4444', flexShrink: 0 }}>
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                <circle cx="12" cy="12" r="10"/>
                <line x1="15" y1="9" x2="9" y2="15"/>
                <line x1="9" y1="9" x2="15" y2="15"/>
              </svg>
            </div>
            <div>
              <h4 style={{
                color: '#ef4444',
                margin: '0 0 4px',
                fontSize: '16px',
                fontWeight: '600'
              }}>
                Analysis Failed
              </h4>
              <p style={{
                color: 'var(--text-muted)',
                margin: 0,
                fontSize: '14px'
              }}>
                {error}
              </p>
            </div>
          </div>
        </div>
      )}

      {/* Results Display */}
      {data && (
        <div style={{
          display: 'flex',
          flexDirection: 'column',
          gap: '32px',
          marginTop: '48px'
        }}>
          {/* Debug info */}
          {console.log('Results rendering with user:', { user, isProUser })}
          <div style={{
            textAlign: 'center',
            padding: '32px',
            background: 'rgba(16, 185, 129, 0.05)',
            border: '1px solid rgba(16, 185, 129, 0.15)',
            borderRadius: '20px',
            backdropFilter: 'blur(12px)',
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center'
          }}>
            <div style={{
              display: 'inline-flex',
              alignItems: 'center',
              gap: '8px',
              background: 'rgba(16, 185, 129, 0.1)',
              border: '1px solid rgba(16, 185, 129, 0.2)',
              borderRadius: '50px',
              padding: '8px 16px',
              fontSize: '14px',
              fontWeight: '600',
              color: '#10b981',
              marginBottom: '16px'
            }}>
              <div style={{
                width: '8px',
                height: '8px',
                background: '#10b981',
                borderRadius: '50%'
              }}></div>
              <span>Analysis Complete</span>
            </div>
            
            <div style={{
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              gap: '12px',
              marginBottom: '16px'
            }}>
              <h2 style={{
                fontSize: '28px',
                fontWeight: '700',
                color: 'var(--text)',
                margin: 0,
                display: 'flex',
                alignItems: 'center',
                gap: '12px'
              }}>
                Results for <span style={{ color: '#8b5cf6', fontWeight: '800' }}>
                  {new URL(data.analyzedUrl || data.url).hostname}
                </span>
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="var(--text-muted)" strokeWidth="2">
                  <polyline points="6,9 12,15 18,9"/>
                </svg>
              </h2>
            </div>

            <button 
              onClick={() => downloadReport()}
              style={{
                display: 'inline-flex',
                alignItems: 'center',
                gap: '8px',
                background: 'linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%)',
                border: 'none',
                borderRadius: '12px',
                padding: '12px 20px',
                color: 'white',
                fontSize: '14px',
                fontWeight: '600',
                cursor: 'pointer',
                transition: 'all 0.3s ease'
              }}
            >
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                <polyline points="7,10 12,15 17,10"/>
                <line x1="12" y1="15" x2="12" y2="3"/>
              </svg>
              Download Report
            </button>
          </div>
          
          <div style={{
            display: 'flex',
            flexDirection: 'column',
            gap: '32px',
            alignItems: 'center',
            padding: '40px',
            background: 'rgba(255, 255, 255, 0.02)',
            border: '1px solid rgba(139, 92, 246, 0.1)',
            borderRadius: '20px',
            backdropFilter: 'blur(12px)'
          }}>
            {/* SEO Score Display */}
            <div style={{
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
              gap: '16px'
            }}>
              <div style={{
                fontSize: '14px',
                fontWeight: '600',
                color: 'var(--text-muted)',
                textTransform: 'uppercase',
                letterSpacing: '0.1em'
              }}>
                Overall SEO Score
              </div>
              <div style={{
                width: '120px',
                height: '120px',
                borderRadius: '50%',
                background: `conic-gradient(#8b5cf6 0deg ${(data.score / 100) * 360}deg, rgba(139, 92, 246, 0.1) ${(data.score / 100) * 360}deg 360deg)`,
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                position: 'relative'
              }}>
                <div style={{
                  width: '100px',
                  height: '100px',
                  borderRadius: '50%',
                  background: 'rgba(0, 0, 0, 0.8)',
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                  justifyContent: 'center'
                }}>
                  <div style={{
                    fontSize: '28px',
                    fontWeight: '900',
                    color: data.score >= 80 ? '#10b981' : data.score >= 60 ? '#f59e0b' : '#ef4444'
                  }}>
                    {data.score}
                  </div>
                  <div style={{
                    fontSize: '12px',
                    fontWeight: '600',
                    color: 'var(--text-muted)',
                    marginTop: '2px'
                  }}>
                    /100
                  </div>
                </div>
              </div>
              <div style={{
                fontSize: '14px',
                fontWeight: '600',
                color: data.score >= 80 ? '#10b981' : data.score >= 60 ? '#f59e0b' : '#ef4444',
                textAlign: 'center'
              }}>
                {data.score >= 80 ? 'Excellent' : data.score >= 60 ? 'Good' : data.score >= 40 ? 'Needs Work' : 'Poor'}
              </div>
            </div>
            
            <div style={{
              display: 'grid',
              gridTemplateColumns: window.innerWidth <= 768 ? '1fr' : 'repeat(3, 1fr)',
              gap: '20px',
              width: '100%',
              maxWidth: '500px'
            }}>
              {[
                { value: data.status, label: 'Status' },
                { value: `${data.ttfbMs}ms`, label: 'Response Time' },
                { value: data.wordCount, label: 'Word Count' }
              ].map((metric, index) => (
                <div key={index} style={{
                  textAlign: 'center',
                  padding: '20px',
                  background: 'rgba(255, 255, 255, 0.03)',
                  border: '1px solid rgba(139, 92, 246, 0.1)',
                  borderRadius: '16px',
                  backdropFilter: 'blur(8px)',
                  transition: 'all 0.3s ease'
                }}>
                  <div style={{
                    fontSize: '24px',
                    fontWeight: '700',
                    color: '#8b5cf6',
                    marginBottom: '8px'
                  }}>
                    {metric.value}
                  </div>
                  <div style={{
                    fontSize: '12px',
                    fontWeight: '600',
                    color: 'var(--text-muted)',
                    textTransform: 'uppercase',
                    letterSpacing: '0.05em'
                  }}>
                    {metric.label}
                  </div>
                </div>
              ))}
            </div>
          </div>


          {/* Core Metrics Section */}
          <div style={{
            background: 'rgba(255, 255, 255, 0.02)',
            border: '1px solid rgba(139, 92, 246, 0.1)',
            borderRadius: '20px',
            padding: '32px',
            backdropFilter: 'blur(12px)'
          }}>
            <div style={{
              textAlign: 'center',
              marginBottom: '32px'
            }}>
              <h3 style={{
                fontSize: '24px',
                fontWeight: '700',
                color: 'var(--text)',
                margin: '0 0 8px'
              }}>
                SEO Analysis Results
              </h3>
              <p style={{
                fontSize: '16px',
                color: 'var(--text-muted)',
                margin: 0
              }}>
                {user ? 'Complete analysis of your website\'s SEO performance' : 'Basic SEO metrics - sign up for advanced insights'}
              </p>
            </div>
            
            <div style={{
              display: 'grid',
              gridTemplateColumns: window.innerWidth <= 768 ? '1fr' : 'repeat(auto-fit, minmax(300px, 1fr))',
              gap: '24px',
              marginBottom: user ? '32px' : '0'
            }}>
              <ResultCard title="Page Basics" items={[
                ['Title', data.metrics.title || '—'],
                ['Title Length', data.metrics.title ? `${data.metrics.title.length} chars` : '—'],
                ['Meta Description', data.metrics.metaDescription || '—'],
                ['Meta Desc. Length', data.metrics.metaDescription ? `${data.metrics.metaDescription.length} chars` : '—'],
                ['Viewport', data.metrics.viewport || '—'],
                ['Language', data.metrics.lang || '—'],
                ['Canonical URL', data.metrics.canonical ? 'Present' : 'Missing'],
              ]} />

              <ResultCard title="Content Structure" items={[
                ['H1 Count', String(data.metrics.h1Count)],
                ['Header Hierarchy', data.metrics.headerHierarchy?.isGood ? 'Good' : data.metrics.headerHierarchy?.issue || 'Issues'],
                ['Word Count', String(data.wordCount)],
                ['Images Total', String(data.metrics.imgCount)],
                ['Images Missing Alt', String(data.metrics.imgsMissingAlt)],
                ['Alt Text Coverage', data.metrics.imgCount > 0 ? `${Math.round(((data.metrics.imgCount - data.metrics.imgsMissingAlt) / data.metrics.imgCount) * 100)}%` : '—'],
              ]} />

              <ResultCard title="Technical SEO" items={[
                ['HTTPS', data.metrics.technical?.https ? 'Yes' : 'No'],
                ['HTTP Status', String(data.status)],
                ['Response Time', `${data.ttfbMs}ms`],
                ['Broken Links', `${data.metrics.technical?.brokenLinks?.brokenCount || 0} broken link${(data.metrics.technical?.brokenLinks?.brokenCount || 0) === 1 ? '' : 's'}`],
                ['JSON-LD Structured Data', String(data.metrics.jsonLdCount)],
                ['Robots Meta', data.metrics.robotsMeta || 'Not set'],
              ]} />

              <ResultCard title="Social Media Tags" items={[
                ['Open Graph Title', data.metrics.og?.title ? 'Present' : 'Missing'],
                ['Open Graph Description', data.metrics.og?.description ? 'Present' : 'Missing'],
                ['Open Graph Image', data.metrics.og?.image ? 'Present' : 'Missing'],
                ['Twitter Card', data.metrics.twitterCard ? data.metrics.twitterCard : 'Missing'],
                ['Social Media Links', String(data.metrics.socialLinks?.count || 0)],
                ['Social Platforms', data.metrics.socialLinks?.platforms?.join(', ') || '—'],
              ]} />

              <ResultCard title="Link Analysis" items={[
                ['Total Links', String(data.metrics.linkTotals?.total || 0)],
                ['Internal Links', String(data.metrics.linkTotals?.internal || 0)],
                ['External Links', String(data.metrics.linkTotals?.external || 0)],
                ['Link Ratio', data.metrics.linkTotals?.external > 0 ? `${Math.round((data.metrics.linkTotals.internal / data.metrics.linkTotals.external) * 100) / 100}:1` : '—'],
                ['Image Optimization', data.metrics.imageAnalysis?.optimized ? 'Good' : data.metrics.imageAnalysis?.issue || 'Issues'],
                ['Keyword Placement', data.metrics.keywordAnalysis?.titleHasKeywords && data.metrics.keywordAnalysis?.descriptionHasKeywords ? 'Good' : 'Needs improvement'],
              ]} />

              {!isProUser && (
                <div style={{
                  gridColumn: window.innerWidth <= 768 ? '1' : 'span 2',
                  padding: '32px',
                  background: 'linear-gradient(135deg, rgba(139, 92, 246, 0.1) 0%, rgba(99, 102, 241, 0.05) 100%)',
                  border: '2px solid rgba(139, 92, 246, 0.2)',
                  borderRadius: '16px',
                  textAlign: 'center',
                  display: 'flex',
                  flexDirection: 'column',
                  justifyContent: 'center',
                  alignItems: 'center'
                }}>
                  <div style={{ fontSize: '20px', marginBottom: '16px' }}>🔒</div>
                  <h4 style={{
                    fontSize: '18px',
                    fontWeight: '700',
                    color: 'var(--text)',
                    margin: '0 0 8px'
                  }}>
                    Unlock Complete Analysis
                  </h4>
                  <p style={{
                    fontSize: '14px',
                    color: 'var(--text-muted)',
                    margin: '0 0 20px',
                    lineHeight: '1.4'
                  }}>
                    Sign up to see advanced metrics, detailed recommendations, and comprehensive SEO insights
                  </p>
                  <button 
                    onClick={() => setShowAuth(true)}
                    style={{
                      background: 'linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%)',
                      border: 'none',
                      borderRadius: '12px',
                      padding: '12px 24px',
                      color: 'white',
                      fontSize: '14px',
                      fontWeight: '600',
                      cursor: 'pointer'
                    }}
                  >
                    Get Full Report
                  </button>
                </div>
              )}
            </div>

            {/* Advanced Metrics Section - Always show but blur for free users */}
            <div style={{
              position: 'relative',
              width: '100%'
            }}>
              <div style={{
                textAlign: 'center',
                marginBottom: '24px',
                paddingTop: '24px',
                borderTop: '1px solid rgba(139, 92, 246, 0.1)'
              }}>
                <div style={{
                  display: 'inline-flex',
                  alignItems: 'center',
                  gap: '8px',
                  background: isProUser ? 'rgba(16, 185, 129, 0.1)' : 'rgba(139, 92, 246, 0.1)',
                  border: isProUser ? '1px solid rgba(16, 185, 129, 0.2)' : '1px solid rgba(139, 92, 246, 0.2)',
                  borderRadius: '50px',
                  padding: '6px 14px',
                  fontSize: '12px',
                  fontWeight: '600',
                  color: isProUser ? '#10b981' : '#8b5cf6',
                  marginBottom: '12px'
                }}>
                  {isProUser ? (
                    <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                      <path d="M9 12l2 2 4-4"/>
                      <circle cx="12" cy="12" r="10"/>
                    </svg>
                  ) : (
                    <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
                      <rect x="3" y="11" width="18" height="11" rx="2" ry="2"/>
                      <circle cx="12" cy="16" r="1"/>
                      <path d="M7 11V7a5 5 0 0 1 10 0v4"/>
                    </svg>
                  )}
                  <span>{isProUser ? 'PRO FEATURES' : 'PRO FEATURES - LOCKED'}</span>
                </div>
                <h4 style={{
                  fontSize: '20px',
                  fontWeight: '700',
                  color: 'var(--text)',
                  margin: '0 0 8px'
                }}>
                  Advanced SEO Insights
                </h4>
                <p style={{
                  fontSize: '14px',
                  color: 'var(--text-muted)',
                  margin: 0
                }}>
                  {isProUser ? 'In-depth analysis and performance metrics' : 'Sign up to unlock detailed analysis and advanced metrics'}
                </p>
              </div>

              <div style={{
                filter: !isProUser ? 'blur(4px)' : 'none',
                pointerEvents: !isProUser ? 'none' : 'auto',
                opacity: !isProUser ? 0.6 : 1,
                transition: 'all 0.3s ease'
              }}>
                <div style={{
                  display: 'grid',
                  gridTemplateColumns: window.innerWidth <= 768 ? '1fr' : 'repeat(auto-fit, minmax(300px, 1fr))',
                  gap: '24px'
                }}>
                  <ResultCard title="Advanced Meta Analysis" items={[
                    ['Meta Information Score', `${data.metrics.metaInformation?.score || 0}/100`],
                    ['Open Graph Complete', data.metrics.metaInformation?.openGraph?.title && data.metrics.metaInformation?.openGraph?.description ? 'Yes' : 'Partial/Missing'],
                    ['Twitter Cards Complete', data.metrics.metaInformation?.twitter?.card ? 'Yes' : 'Missing'],
                    ['Dublin Core Tags', Object.values(data.metrics.metaInformation?.dublinCore || {}).filter(Boolean).length > 0 ? 'Present' : 'Missing'],
                    ['Geo/Region Tags', data.metrics.metaInformation?.basic?.geoRegion ? 'Present' : 'Missing'],
                    ['Author Information', data.metrics.metaInformation?.basic?.author ? 'Present' : 'Missing'],
                  ]} />

                  <ResultCard title="Schema & Structured Data" items={[
                    ['Schema Markup Score', `${data.metrics.schemaMarkup?.score || 0}/100`],
                    ['Total Schema Count', String(data.metrics.schemaMarkup?.count || 0)],
                    ['JSON-LD Schemas', String(data.metrics.jsonLdCount || 0)],
                    ['Organization Schema', data.metrics.schemaMarkup?.hasOrganization ? 'Present' : 'Missing'],
                    ['Website Schema', data.metrics.schemaMarkup?.hasWebsite ? 'Present' : 'Missing'],
                    ['Article Schema', data.metrics.schemaMarkup?.hasArticle ? 'Present' : 'Missing'],
                    ['Breadcrumb Schema', data.metrics.schemaMarkup?.hasBreadcrumb ? 'Present' : 'Missing'],
                    ['LocalBusiness Schema', data.metrics.schemaMarkup?.hasLocalBusiness ? 'Present' : 'Missing'],
                  ]} />

                  <ResultCard title="Server & Security" items={[
                    ['Server Config Score', `${data.metrics.serverConfiguration?.score || 0}/100`],
                    ['HTTPS Enabled', data.metrics.technical?.https ? 'Yes' : 'No'],
                    ['HSTS Header', data.metrics.serverConfiguration?.security?.hasHSTS ? 'Present' : 'Missing'],
                    ['CSP Header', data.metrics.serverConfiguration?.security?.hasCSP ? 'Present' : 'Missing'],
                    ['X-Frame-Options', data.metrics.serverConfiguration?.security?.hasXFrameOptions ? 'Present' : 'Missing'],
                    ['X-Content-Type-Options', data.metrics.serverConfiguration?.security?.hasXContentTypeOptions ? 'Present' : 'Missing'],
                    ['Cache Headers', data.metrics.serverConfiguration?.caching?.hasCacheControl ? 'Present' : 'Missing'],
                    ['Server Software', data.metrics.serverConfiguration?.headers?.server || 'Hidden/Unknown'],
                  ]} />

                  <ResultCard title="Accessibility Analysis" items={[
                    ['Accessibility Score', `${data.metrics.accessibility?.score || 0}/100`],
                    ['Images Without Alt', String(data.metrics.accessibility?.imagesWithoutAlt || 0)],
                    ['Links Without Text', String(data.metrics.accessibility?.linksWithoutText || 0)],
                    ['H1 Structure', data.metrics.accessibility?.headingStructure?.hasH1 ? 'Good' : 'Missing H1'],
                    ['Heading Hierarchy', data.metrics.accessibility?.headingStructure?.hasSkips ? 'Skips levels' : 'Good'],
                    ['Form Labels', `${data.metrics.accessibility?.formLabels?.labeled || 0}/${data.metrics.accessibility?.formLabels?.total || 0} labeled`],
                    ['Landmarks', String(data.metrics.accessibility?.landmarks?.count || 0)],
                    ['Skip Links', String(data.metrics.accessibility?.skipLinks || 0)],
                  ]} />

                  <ResultCard title="Content Quality" items={[
                    ['Content Quality Score', `${data.metrics.contentQuality?.structureScore || 0}/100`],
                    ['Word Count', String(data.metrics.contentQuality?.wordCount || data.wordCount)],
                    ['Sentence Count', String(data.metrics.contentQuality?.sentenceCount || 0)],
                    ['Avg Words/Sentence', String(data.metrics.contentQuality?.avgWordsPerSentence || 0)],
                    ['Reading Level', data.metrics.contentQuality?.readingLevel || 'Unknown'],
                    ['Flesch Score', String(data.metrics.contentQuality?.fleschReadingScore || 0)],
                    ['Paragraphs', String(data.metrics.contentQuality?.paragraphCount || 0)],
                    ['Lists', String(data.metrics.contentQuality?.listCount || 0)],
                  ]} />

                  <ResultCard title="Advanced Link Analysis" items={[
                    ['Link Structure Score', `${data.metrics.linkStructure?.score || 0}/100`],
                    ['Internal/External Ratio', data.metrics.linkStructure?.internalToExternalRatio || '—'],
                    ['NoFollow Links', String(data.metrics.linkStructure?.nofollow || 0)],
                    ['Target Blank Links', String(data.metrics.linkStructure?.targetBlank || 0)],
                    ['NoOpener/NoReferrer', `${data.metrics.linkStructure?.noopener || 0}/${data.metrics.linkStructure?.noreferrer || 0}`],
                    ['Email Links', String(data.metrics.linkStructure?.emailLinks || 0)],
                    ['File Downloads', String(data.metrics.linkStructure?.fileLinks || 0)],
                    ['JavaScript Links', String(data.metrics.linkStructure?.jsLinks || 0)],
                  ]} />

                  <ResultCard title="Advanced Image Analysis" items={[
                    ['Advanced Image Score', `${data.metrics.advancedImages?.score || 0}/100`],
                    ['Alt Text Coverage', `${data.metrics.advancedImages?.altCoverage || 0}%`],
                    ['Lazy Loading Coverage', `${data.metrics.advancedImages?.lazyLoadingCoverage || 0}%`],
                    ['Images with Srcset', String(data.metrics.advancedImages?.withSrcset || 0)],
                    ['WebP Format Images', String(data.metrics.advancedImages?.webpFormat || 0)],
                    ['Large Images', String(data.metrics.advancedImages?.largeImages || 0)],
                    ['Decorative Images', String(data.metrics.advancedImages?.decorativeImages || 0)],
                    ['Images with Title', String(data.metrics.advancedImages?.withTitle || 0)],
                  ]} />

                  <ResultCard title="Mobile & Performance" items={[
                    ['Mobile Friendly Score', `${data.metrics.mobileFriendly?.score || 0}/100`],
                    ['Has Viewport Meta', data.metrics.mobileFriendly?.hasViewport ? 'Yes' : 'No'],
                    ['Responsive Images', data.metrics.mobileFriendly?.usesResponsiveImages ? 'Yes' : 'No'],
                    ['Touch Target Analysis', data.metrics.mobileFriendly?.hasTouchTargets ? 'Good' : 'Issues'],
                    ['Small Text Detection', data.metrics.mobileFriendly?.hasSmallText ? 'Issues found' : 'Good'],
                    ['Flash Content', data.metrics.mobileFriendly?.hasFlashContent ? 'Present (Bad)' : 'None (Good)'],
                    ['Hover Elements', String(data.metrics.mobileFriendly?.hasHoverElements || 0)],
                    ['Media Queries', data.metrics.mobileFriendly?.hasMediaQueries ? 'Present' : 'Missing'],
                  ]} />

                  <ResultCard title="Security Analysis" items={[
                    ['Security Score', `${data.metrics.security?.score || 0}/100`],
                    ['Mixed Content Issues', String(data.metrics.security?.mixedContent?.count || 0)],
                    ['Insecure Forms', String(data.metrics.security?.formSecurity?.insecureForms || 0)],
                    ['Forms with CSRF', `${data.metrics.security?.formSecurity?.withCSRF || 0}/${data.metrics.security?.formSecurity?.total || 0}`],
                    ['Third Party Scripts', String(data.metrics.security?.thirdPartyScripts?.thirdParty || 0)],
                    ['Suspicious Scripts', String(data.metrics.security?.thirdPartyScripts?.suspicious || 0)],
                    ['Secure Cookies', `${data.metrics.security?.cookieSecurity?.secure || 0}/${data.metrics.security?.cookieSecurity?.total || 0}`],
                    ['HttpOnly Cookies', `${data.metrics.security?.cookieSecurity?.httpOnly || 0}/${data.metrics.security?.cookieSecurity?.total || 0}`],
                  ]} />
                </div>
              </div>

              {/* Unlock overlay for free users */}
              {!isProUser && (
                <div style={{
                  position: 'absolute',
                  top: '50%',
                  left: '50%',
                  transform: 'translate(-50%, -50%)',
                  background: 'rgba(0, 0, 0, 0.9)',
                  borderRadius: '20px',
                  padding: '40px',
                  textAlign: 'center',
                  border: '2px solid rgba(139, 92, 246, 0.3)',
                  backdropFilter: 'blur(20px)',
                  zIndex: 10,
                  minWidth: '320px'
                }}>
                  <div style={{
                    fontSize: '48px',
                    marginBottom: '16px'
                  }}>
                    🔒
                  </div>
                  <h3 style={{
                    fontSize: '24px',
                    fontWeight: '700',
                    color: 'white',
                    margin: '0 0 12px'
                  }}>
                    Advanced Metrics Locked
                  </h3>
                  <p style={{
                    fontSize: '16px',
                    color: 'rgba(255, 255, 255, 0.8)',
                    margin: '0 0 24px',
                    lineHeight: '1.5'
                  }}>
                    Unlock detailed performance metrics, accessibility analysis, and advanced SEO insights
                  </p>
                  <button 
                    onClick={() => setShowAuth(true)}
                    style={{
                      background: 'linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%)',
                      border: 'none',
                      borderRadius: '16px',
                      padding: '16px 32px',
                      color: 'white',
                      fontSize: '16px',
                      fontWeight: '700',
                      cursor: 'pointer',
                      transition: 'all 0.3s ease',
                      boxShadow: '0 8px 32px rgba(139, 92, 246, 0.3)'
                    }}
                  >
                    Unlock Pro Features
                  </button>
                </div>
              )}
            </div>

            {/* Upgrade prompt for free users */}
            {!isProUser && (
              <div style={{
                marginTop: '32px',
                padding: '32px',
                background: 'linear-gradient(135deg, rgba(139, 92, 246, 0.1) 0%, rgba(99, 102, 241, 0.05) 100%)',
                border: '2px solid rgba(139, 92, 246, 0.2)',
                borderRadius: '20px',
                textAlign: 'center'
              }}>
                <div style={{
                  fontSize: '24px',
                  marginBottom: '8px'
                }}>
                  🚀
                </div>
                <h4 style={{
                  fontSize: '20px',
                  fontWeight: '700',
                  color: 'var(--text)',
                  margin: '0 0 12px'
                }}>
                  Unlock Advanced SEO Analysis
                </h4>
                <p style={{
                  fontSize: '16px',
                  color: 'var(--text-muted)',
                  margin: '0 0 24px',
                  lineHeight: '1.5'
                }}>
                  Get performance metrics, mobile analysis, schema markup insights, and detailed recommendations
                </p>
                <div style={{
                  display: 'grid',
                  gridTemplateColumns: window.innerWidth <= 768 ? '1fr' : 'repeat(3, 1fr)',
                  gap: '16px',
                  marginBottom: '24px',
                  textAlign: 'left'
                }}>
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px', color: 'var(--text)' }}>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="#10b981" strokeWidth="2">
                      <polyline points="20,6 9,17 4,12"/>
                    </svg>
                    <span>Performance Analysis</span>
                  </div>
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px', color: 'var(--text)' }}>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="#10b981" strokeWidth="2">
                      <polyline points="20,6 9,17 4,12"/>
                    </svg>
                    <span>Mobile Optimization</span>
                  </div>
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px', fontSize: '14px', color: 'var(--text)' }}>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="#10b981" strokeWidth="2">
                      <polyline points="20,6 9,17 4,12"/>
                    </svg>
                    <span>Schema Markup</span>
                  </div>
                </div>
                <button 
                  onClick={() => setShowAuth(true)}
                  style={{
                    background: 'linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%)',
                    border: 'none',
                    borderRadius: '16px',
                    padding: '16px 32px',
                    color: 'white',
                    fontSize: '16px',
                    fontWeight: '700',
                    cursor: 'pointer',
                    transition: 'all 0.3s ease'
                  }}
                >
                  Get Advanced Analysis Free
                </button>
              </div>
            )}
          </div>

          {/* Priority Fixes Section - Now at bottom with new styling */}
          <div style={{
            background: 'linear-gradient(135deg, rgba(30, 30, 60, 0.95) 0%, rgba(20, 20, 40, 0.98) 100%)',
            border: '1px solid rgba(139, 92, 246, 0.2)',
            borderRadius: '24px',
            padding: '32px',
            backdropFilter: 'blur(20px)',
            marginTop: '32px'
          }}>
            <div style={{
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'space-between',
              marginBottom: '32px'
            }}>
              <div style={{
                display: 'flex',
                alignItems: 'center',
                gap: '16px'
              }}>
                <div style={{
                  width: '48px',
                  height: '48px',
                  background: 'linear-gradient(135deg, #ef4444 0%, #f97316 100%)',
                  borderRadius: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center'
                }}>
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" strokeWidth="2">
                    <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"/>
                    <line x1="12" y1="9" x2="12" y2="13"/>
                    <line x1="12" y1="17" x2="12.01" y2="17"/>
                  </svg>
                </div>
                <div>
                  <h3 style={{
                    fontSize: '24px',
                    fontWeight: '700',
                    color: 'white',
                    margin: '0 0 4px'
                  }}>
                    Top Priority Fixes
                  </h3>
                  <p style={{
                    fontSize: '16px',
                    color: 'rgba(255, 255, 255, 0.7)',
                    margin: 0
                  }}>
                    Address these issues to improve your SEO score
                  </p>
                </div>
              </div>
              
              <div style={{
                width: '48px',
                height: '48px',
                background: 'rgba(139, 92, 246, 0.2)',
                borderRadius: '50%',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                fontSize: '18px',
                fontWeight: '700',
                color: '#8b5cf6'
              }}>
                {(() => {
                  // Calculate actual number of priority fixes
                  let count = 0;
                  if (!data.metrics.title || data.metrics.title.length < 30) count++;
                  if (!data.metrics.metaDescription || data.metrics.metaDescription.length < 50) count++;
                  if (data.metrics.h1Count !== 1) count++;
                  if (!data.metrics.headerHierarchy?.isGood) count++;
                  if (!data.metrics.technical?.https) count++;
                  if (data.ttfbMs > 800) count++;
                  if (data.metrics.imgsMissingAlt > 0) count++;
                  if (!data.metrics.viewport) count++;
                  if (data.metrics.socialLinks?.count < 2) count++;
                  if (data.metrics.technical?.brokenLinks?.brokenCount > 0) count++;
                  
                  // Only count advanced issues for pro users
                  if (isProUser) {
                    if (data.metrics.metaInformation?.score < 70) count++;
                    if (data.metrics.schemaMarkup?.count === 0) count++;
                    if (data.metrics.serverConfiguration?.score < 60) count++;
                    if (data.metrics.accessibility?.score < 80) count++;
                    if (data.metrics.security?.score < 70) count++;
                    if (data.metrics.mobileFriendly?.score < 80) count++;
                  }
                  
                  return count === 0 ? '✓' : count;
                })()}
              </div>
            </div>
            
            <div style={{
              display: 'flex',
              flexDirection: 'column',
              gap: '12px'
            }}>
              {/* Generate dynamic priority fixes based on actual analysis results */}
              {(() => {
                const fixes = [];
                let fixNum = 1;

                // HIGH IMPACT ISSUES (Basic SEO problems)
                if (!data.metrics.title || data.metrics.title.length < 30) {
                  fixes.push({
                    num: fixNum++,
                    title: !data.metrics.title ? 'Missing page title tag' : `Title too short (${data.metrics.title.length} chars, need 30-60)`,
                    impact: 'HIGH IMPACT',
                    color: '#ef4444'
                  });
                }

                if (!data.metrics.metaDescription || data.metrics.metaDescription.length < 50) {
                  fixes.push({
                    num: fixNum++,
                    title: !data.metrics.metaDescription ? 'Missing meta description' : `Meta description too short (${data.metrics.metaDescription.length} chars, need 50-160)`,
                    impact: 'HIGH IMPACT',
                    color: '#ef4444'
                  });
                }

                if (data.metrics.h1Count !== 1) {
                  fixes.push({
                    num: fixNum++,
                    title: data.metrics.h1Count === 0 ? 'Missing H1 tag' : `Multiple H1 tags found (${data.metrics.h1Count}), should be exactly 1`,
                    impact: 'HIGH IMPACT',
                    color: '#ef4444'
                  });
                }

                if (!data.metrics.headerHierarchy?.isGood) {
                  fixes.push({
                    num: fixNum++,
                    title: data.metrics.headerHierarchy?.issue || 'Header hierarchy issues detected',
                    impact: 'HIGH IMPACT',
                    color: '#ef4444'
                  });
                }

                if (!data.metrics.technical?.https) {
                  fixes.push({
                    num: fixNum++,
                    title: 'Enable HTTPS for security and SEO benefits',
                    impact: 'HIGH IMPACT',
                    color: '#ef4444'
                  });
                }

                if (data.ttfbMs > 800) {
                  fixes.push({
                    num: fixNum++,
                    title: `High response time: ${data.ttfbMs}ms (should be under 800ms)`,
                    impact: 'HIGH IMPACT',
                    color: '#ef4444'
                  });
                }

                if (data.metrics.imgsMissingAlt > 0) {
                  fixes.push({
                    num: fixNum++,
                    title: `${data.metrics.imgsMissingAlt} image${data.metrics.imgsMissingAlt > 1 ? 's are' : ' is'} missing alt text`,
                    impact: 'HIGH IMPACT',
                    color: '#f59e0b'
                  });
                }

                if (!data.metrics.viewport) {
                  fixes.push({
                    num: fixNum++,
                    title: 'Missing mobile viewport meta tag',
                    impact: 'HIGH IMPACT',
                    color: '#ef4444'
                  });
                }

                if (data.metrics.socialLinks?.count < 2) {
                  fixes.push({
                    num: fixNum++,
                    title: `Add social media links (only ${data.metrics.socialLinks?.count || 0} found)`,
                    impact: 'MEDIUM IMPACT',
                    color: '#f59e0b'
                  });
                }

                if (data.metrics.technical?.brokenLinks?.brokenCount > 0) {
                  fixes.push({
                    num: fixNum++,
                    title: `Fix ${data.metrics.technical.brokenLinks.brokenCount} broken link${data.metrics.technical.brokenLinks.brokenCount > 1 ? 's' : ''}`,
                    impact: 'MEDIUM IMPACT',
                    color: '#f59e0b'
                  });
                }

                // ADVANCED ISSUES (Pro features) - Only show to pro users
                if (isProUser) {
                  if (data.metrics.metaInformation?.score < 70) {
                    fixes.push({
                      num: fixNum++,
                      title: `Improve meta information completeness (score: ${data.metrics.metaInformation.score}/100)`,
                      impact: 'ADVANCED',
                      color: '#6b7280'
                    });
                  }

                  if (data.metrics.schemaMarkup?.count === 0) {
                    fixes.push({
                      num: fixNum++,
                      title: 'Add structured data markup for better search visibility',
                      impact: 'ADVANCED',
                      color: '#6b7280'
                    });
                  }

                  if (data.metrics.serverConfiguration?.score < 60) {
                    fixes.push({
                      num: fixNum++,
                      title: `Improve server security headers (score: ${data.metrics.serverConfiguration?.score || 0}/100)`,
                      impact: 'ADVANCED',
                      color: '#6b7280'
                    });
                  }

                  if (data.metrics.accessibility?.score < 80) {
                    fixes.push({
                      num: fixNum++,
                      title: `Address accessibility issues (score: ${data.metrics.accessibility?.score || 0}/100)`,
                      impact: 'ADVANCED',
                      color: '#6b7280'
                    });
                  }

                  if (data.metrics.security?.score < 70) {
                    fixes.push({
                      num: fixNum++,
                      title: `Enhance website security features (score: ${data.metrics.security?.score || 0}/100)`,
                      impact: 'ADVANCED',
                      color: '#6b7280'
                    });
                  }

                  if (data.metrics.mobileFriendly?.score < 80) {
                    fixes.push({
                      num: fixNum++,
                      title: `Improve mobile-friendliness (score: ${data.metrics.mobileFriendly?.score || 0}/100)`,
                      impact: 'ADVANCED',
                      color: '#6b7280'
                    });
                  }
                }

                // If no issues found, show positive message
                if (fixes.length === 0) {
                  fixes.push({
                    num: 1,
                    title: '🎉 Great job! No critical SEO issues found',
                    impact: 'ALL GOOD',
                    color: '#10b981'
                  });
                }

                // For free users, limit to basic issues only (no advanced)
                // For pro users, show all issues up to 8
                return fixes;
              })().map((fix) => (
                <div key={fix.num} style={{
                  display: 'flex',
                  alignItems: 'flex-start',
                  gap: '16px',
                  padding: '16px 0',
                  borderBottom: fix.num !== 8 && (user || fix.num !== 3) ? '1px solid rgba(139, 92, 246, 0.1)' : 'none'
                }}>
                  <div style={{
                    width: '32px',
                    height: '32px',
                    background: fix.color,
                    borderRadius: '50%',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    fontSize: '14px',
                    fontWeight: '700',
                    color: 'white',
                    flexShrink: 0
                  }}>
                    {fix.num}
                  </div>
                  <div style={{ flex: 1 }}>
                    <h4 style={{
                      fontSize: '16px',
                      fontWeight: '600',
                      color: 'white',
                      margin: '0 0 4px',
                      lineHeight: '1.3'
                    }}>
                      {fix.title}
                    </h4>
                    <div style={{
                      fontSize: '12px',
                      fontWeight: '600',
                      color: fix.impact === 'HIGH IMPACT' ? 'rgba(255, 255, 255, 0.8)' : 'rgba(255, 255, 255, 0.5)',
                      textTransform: 'uppercase',
                      letterSpacing: '0.05em'
                    }}>
                      {fix.impact}
                    </div>
                  </div>
                </div>
              ))}
              
              {!isProUser && (
                <div style={{
                  padding: '24px',
                  background: 'rgba(139, 92, 246, 0.1)',
                  border: '1px solid rgba(139, 92, 246, 0.3)',
                  borderRadius: '16px',
                  textAlign: 'center',
                  marginTop: '16px'
                }}>
                  <div style={{
                    fontSize: '18px',
                    fontWeight: '700',
                    color: 'white',
                    marginBottom: '8px'
                  }}>
                    🔓 Unlock All Priority Fixes
                  </div>
                  <p style={{
                    fontSize: '14px',
                    color: 'rgba(255, 255, 255, 0.7)',
                    margin: '0 0 16px',
                    lineHeight: '1.5'
                  }}>
                    Get detailed priority fixes and advanced SEO recommendations
                  </p>
                  <button 
                    onClick={() => setShowAuth(true)}
                    style={{
                      background: 'linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%)',
                      border: 'none',
                      borderRadius: '12px',
                      padding: '12px 24px',
                      color: 'white',
                      fontSize: '14px',
                      fontWeight: '600',
                      cursor: 'pointer'
                    }}
                  >
                    Sign Up Free
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>
      )}
    </div>
  )
}